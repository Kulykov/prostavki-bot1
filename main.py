from flask import Flask
from aiogram import Bot, Dispatcher, types, F
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.fsm.storage.memory import MemoryStorage
from aiogram import Router
import logging
import asyncio
from datetime import datetime
import os

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Flask (keep_alive)
app = Flask(__name__)

@app.route('/')
def index():
    return "I'm alive!"

# –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã
API_TOKEN = '7672403214:AAGeYafr1OsdF2puiEzOyfMyFP8HTKmBta8'
ADMIN_CHAT_ID = -1002859466060

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –±–æ—Ç–∞
logging.basicConfig(level=logging.INFO)
bot = Bot(token=API_TOKEN)
dp = Dispatcher(storage=MemoryStorage())
router = Router()

# --- –°—Ç—Ä–∞—Ç–µ–≥–∏–∏ –¥–Ω—è ---
strategies = [
    "üéØ –°—Ç–∞–≤—å –Ω–∞ live-—Ç–æ—Ç–∞–ª—ã –ø–æ—Å–ª–µ 10-–π –º–∏–Ω—É—Ç—ã ‚Äî –∞–Ω–∞–ª–∏–∑–∏—Ä—É–π –¥–∏–Ω–∞–º–∏–∫—É –º–∞—Ç—á–∞!",
    "üìä –ò—Å–ø–æ–ª—å–∑—É–π –¥–æ–≥–æ–Ω –Ω–∞ –Ω–∏—á—å—é –≤ –ª–∞–π–≤–µ ‚Äî –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Ä–∞–≤–Ω—ã—Ö –ø–æ —Å–∏–ª–∞–º –ª–∏–≥–∞—Ö.",
    "üöÄ –ü–µ—Ä–µ—Å—Ç—Ä–∞—Ö–æ–≤–∫–∞: —Å—Ç–∞–≤—å 70% –Ω–∞ —Ñ–∞–≤–æ—Ä–∏—Ç–∞ –∏ 30% –Ω–∞ –Ω–∏—á—å—é –≤ –¥–≤–æ–π–Ω—ã—Ö —à–∞–Ω—Å–∞—Ö.",
    "üìâ –ò–≥—Ä–∞–µ–º –Ω–∞ –ø–æ–Ω–∏–∂–µ–Ω–∏–µ: —Ç–æ—Ç–∞–ª –º–µ–Ω—å—à–µ –≤ –∑–∞—Ç—è–∂–Ω—ã—Ö –º–∞—Ç—á–∞—Ö —Å –º–∞–ª—ã–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —É–¥–∞—Ä–æ–≤.",
    "üî• –°—Ç—Ä–∞—Ç–µ–≥–∏—è 5+5: –ø—è—Ç—å —Å—Ç–∞–≤–æ–∫ –≤ –¥–µ–Ω—å –ø–æ 2% –æ—Ç –±–∞–Ω–∫–∞ —Å —Ä–∞–∑–Ω—ã–º–∏ —Ç–∏–ø–∞–º–∏ –∏—Å—Ö–æ–¥–æ–≤.",
]

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
main_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="üìà –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–Ω—è"), KeyboardButton(text="üéÅ –ü–æ–ª—É—á–∏—Ç—å –∫—É–ø–æ–Ω")],
    [KeyboardButton(text="üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è"), KeyboardButton(text="üì£ –ù–∞—à Telegram")],
    [KeyboardButton(text="üåç –í—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç"), KeyboardButton(text="üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞")]
], resize_keyboard=True)

back_menu = ReplyKeyboardMarkup(keyboard=[[KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]], resize_keyboard=True)
back_ready_menu = ReplyKeyboardMarkup(keyboard=[
    [KeyboardButton(text="‚úÖ –ì–æ—Ç–æ–≤–æ")],
    [KeyboardButton(text="üîô –ù–∞–∑–∞–¥")]
], resize_keyboard=True)

# --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π ---
@router.message(F.text == "/start")
async def start_cmd(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Pro Stavki | Profit Bot.", reply_markup=main_menu)

@router.message(F.text == "üìà –°—Ç—Ä–∞—Ç–µ–≥–∏—è –¥–Ω—è")
async def strategy_day(message: types.Message):
    day_index = datetime.now().day % len(strategies)
    await message.answer(f"üìä –°—Ç—Ä–∞—Ç–µ–≥–∏—è –Ω–∞ —Å–µ–≥–æ–¥–Ω—è:\n{strategies[day_index]}", reply_markup=back_menu)

@router.message(F.text == "üåç –í—Ö–æ–¥ –Ω–∞ —Å–∞–π—Ç")
async def open_site(message: types.Message):
    await message.answer("üåê –û—Ç–∫—Ä—ã–≤–∞–π [–Ω–∞—à —Å–∞–π—Ç](https://pro-stavki-site.onrender.com/)", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=back_menu)

@router.message(F.text == "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è")
async def registration_link(message: types.Message):
    await message.answer("üîë [–†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è –∑–¥–µ—Å—å](https://1wvteh.com/?p=7bd0)", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=back_ready_menu)

@router.message(F.text == "üì£ –ù–∞—à Telegram")
async def telegram_channel(message: types.Message):
    await message.answer("üì¢ –ü—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ –Ω–∞—à–µ–º—É [–∫–∞–Ω–∞–ª—É](https://t.me/ProStavki_365)", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=back_menu)

@router.message(F.text == "üõü –ü–æ–¥–¥–µ—Ä–∂–∫–∞")
async def support_link(message: types.Message):
    await message.answer("üí¨ –ü–∏—à–∏ [–≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É](https://t.me/ProStavki365)", parse_mode="Markdown", disable_web_page_preview=True, reply_markup=back_menu)

@router.message(F.text == "üéÅ –ü–æ–ª—É—á–∏—Ç—å –∫—É–ø–æ–Ω")
async def get_coupon(message: types.Message):
    await message.answer("üéØ –î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫—É–ø–æ–Ω–∞:\n1. –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Å—è\n2. –ü–æ–ø–æ–ª–Ω–∏ —Å—á—ë—Ç\n3. –û—Ç–ø—Ä–∞–≤—å —Å–∫—Ä–∏–Ω –∏–ª–∏ ID –¥–µ–ø–æ–∑–∏—Ç–∞ —Å—é–¥–∞.", reply_markup=back_ready_menu)

@router.message(F.text == "‚úÖ –ì–æ—Ç–æ–≤–æ")
async def done_handler(message: types.Message):
    await message.answer("üì© –ñ–¥—ë–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ (—Å–∫—Ä–∏–Ω—à–æ—Ç –∏–ª–∏ ID).", reply_markup=back_menu)

@router.message(F.text == "üîô –ù–∞–∑–∞–¥")
async def go_back(message: types.Message):
    await message.answer("üîô –í–æ–∑–≤—Ä–∞—â–∞—é—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é:", reply_markup=main_menu)

@router.message(F.photo)
async def handle_photo(message: types.Message):
    await message.answer("üì• –õ–æ–≤–∏ [–≥–∞–π–¥ –≤ PDF](https://drive.google.com/file/d/1W5n5cQ19ktQwxa87GWHog3yWL2z9mBXy/view?usp=sharing)", parse_mode='Markdown', reply_markup=main_menu)
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç @{message.from_user.username} (ID: {message.from_user.id})")

@router.message(F.text.regexp(r"^ID\d{4,}").as_('deposit'))
async def handle_deposit_id(message: types.Message, deposit: types.Message):
    user_input = deposit.text.strip().upper()
    await message.answer(f"‚úÖ –î–µ–ø–æ–∑–∏—Ç –ø–æ–¥ {user_input} –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω!\nüì• –õ–æ–≤–∏ [PDF-–≥–∞–π–¥](https://drive.google.com/file/d/1W5n5cQ19ktQwxa87GWHog3yWL2z9mBXy/view?usp=sharing)", parse_mode='Markdown', reply_markup=main_menu)
    await bot.send_message(chat_id=ADMIN_CHAT_ID, text=f"‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –æ—Ç @{message.from_user.username} ‚Äî {user_input}")

# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ –∏ —Å–µ—Ä–≤–µ—Ä–∞ ---
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    dp.include_router(router)
    await dp.start_polling(bot)

if __name__ == '__main__':
    import threading

    def run_flask():
        app.run(host="0.0.0.0", port=8080)

    threading.Thread(target=run_flask).start()

    try:
        asyncio.run(main())
    except (KeyboardInterrupt, SystemExit):
        print("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
